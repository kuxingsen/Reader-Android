package com.monk.reader.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.monk.reader.dao.bean.ShelfBook;
import com.monk.reader.dao.bean.BookCatalogue;
import com.monk.reader.download.DownloadInfo;
import com.monk.reader.dao.bean.ReadInfo;

import com.monk.reader.dao.ShelfBookDao;
import com.monk.reader.dao.BookCatalogueDao;
import com.monk.reader.dao.DownloadInfoDao;
import com.monk.reader.dao.ReadInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig shelfBookDaoConfig;
    private final DaoConfig bookCatalogueDaoConfig;
    private final DaoConfig downloadInfoDaoConfig;
    private final DaoConfig readInfoDaoConfig;

    private final ShelfBookDao shelfBookDao;
    private final BookCatalogueDao bookCatalogueDao;
    private final DownloadInfoDao downloadInfoDao;
    private final ReadInfoDao readInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        shelfBookDaoConfig = daoConfigMap.get(ShelfBookDao.class).clone();
        shelfBookDaoConfig.initIdentityScope(type);

        bookCatalogueDaoConfig = daoConfigMap.get(BookCatalogueDao.class).clone();
        bookCatalogueDaoConfig.initIdentityScope(type);

        downloadInfoDaoConfig = daoConfigMap.get(DownloadInfoDao.class).clone();
        downloadInfoDaoConfig.initIdentityScope(type);

        readInfoDaoConfig = daoConfigMap.get(ReadInfoDao.class).clone();
        readInfoDaoConfig.initIdentityScope(type);

        shelfBookDao = new ShelfBookDao(shelfBookDaoConfig, this);
        bookCatalogueDao = new BookCatalogueDao(bookCatalogueDaoConfig, this);
        downloadInfoDao = new DownloadInfoDao(downloadInfoDaoConfig, this);
        readInfoDao = new ReadInfoDao(readInfoDaoConfig, this);

        registerDao(ShelfBook.class, shelfBookDao);
        registerDao(BookCatalogue.class, bookCatalogueDao);
        registerDao(DownloadInfo.class, downloadInfoDao);
        registerDao(ReadInfo.class, readInfoDao);
    }
    
    public void clear() {
        shelfBookDaoConfig.clearIdentityScope();
        bookCatalogueDaoConfig.clearIdentityScope();
        downloadInfoDaoConfig.clearIdentityScope();
        readInfoDaoConfig.clearIdentityScope();
    }

    public ShelfBookDao getShelfBookDao() {
        return shelfBookDao;
    }

    public BookCatalogueDao getBookCatalogueDao() {
        return bookCatalogueDao;
    }

    public DownloadInfoDao getDownloadInfoDao() {
        return downloadInfoDao;
    }

    public ReadInfoDao getReadInfoDao() {
        return readInfoDao;
    }

}
